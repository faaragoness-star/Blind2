# .github/workflows/release-plugin.yml
name: Release · WP plugin artifact

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Existing release tag (e.g., v0.1.3)'
        required: true
      fix:
        description: 'If mismatch, update the PHP header in the ZIP (no commit)'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  package-plugin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve tag (manual or from release)
        run: |
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "TAG=${{ inputs.tag }}" >> $GITHUB_ENV
          fi
          echo "Using TAG=$TAG"

      - name: Check/sync plugin version header
        env:
          FIX: ${{ github.event_name == 'workflow_dispatch' && inputs.fix || 'false' }}
        run: |
          set -e
          PLUGIN_FILE="apps/wp-plugin/G3D-Flow-Orchestrator/g3d-flow-orchestrator.php"
          WANT="${TAG#v}"  # remove leading v if present
          HAVE="$(grep -E '^\s*\*\s*Version:\s*' "$PLUGIN_FILE" | sed -E 's/.*Version:\s*([0-9]+\.[0-9]+\.[0-9]+).*/\1/' || true)"
          echo "Header found version: $HAVE | Tag wants: $WANT"

          if [ -z "$HAVE" ]; then
            echo "::error::No se encontró la línea 'Version:' en $PLUGIN_FILE"
            exit 1
          fi

          if [ "$HAVE" != "$WANT" ]; then
            if [ "$FIX" = "true" ]; then
              sed -i -E "s/^(\s*\*\s*Version:\s*).*/\1$WANT/" "$PLUGIN_FILE"
              echo "Sincronizado header (solo en el working tree para el ZIP)."
            else
              echo "::error::La versión del plugin ($HAVE) no coincide con el tag ($WANT)."
              echo "Sugerencia: vuelve a lanzar este workflow con 'fix: true', o sube un commit que actualice el header."
              exit 1
            fi
          else
            echo "Version OK."
          fi

      - name: Create plugin zip
        run: |
          set -e
          PLUGDIR="apps/wp-plugin/G3D-Flow-Orchestrator"
          OUT="g3d-flow-orchestrator-${TAG}.zip"
          cd "$PLUGDIR/.."
          zip -r "$GITHUB_WORKSPACE/$OUT" "G3D-Flow-Orchestrator" -x "**/.git/**"
          echo "ZIP_PATH=$GITHUB_WORKSPACE/$OUT" >> $GITHUB_ENV

      - name: Upload zip to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: ${{ env.ZIP_PATH }}
          fail_on_unmatched_files: true
